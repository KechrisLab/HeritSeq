% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HeriToolsV12.R
\name{GetBootCI}
\alias{GetBootCI}
\title{SHORT DESCRIPTION OF GETBOOTCI}
\usage{
GetBootCI(CountMatrix, Strains, which.features, num.boot, method = "NB",
  alpha = 0.05, optimizer = "nlminb")
}
\arguments{
\item{CountMatrix}{The data matrix; rows are features, columns are samples}

\item{Strains}{The vector of strains corresponding to each sample, length = ncol(CountMatrix)}

\item{which.features}{The vector of select feature numbers for which CI is desired}

\item{num.boot}{Number of bootstraps}

\item{method}{Which method should be used, "CP", "NB", or "VST". "VST" method bootstraps data from "NB"}

\item{alpha}{The CI will be \eqn{100*(1-\alpha)}{100*(1-alpha)} percent CI}

\item{optimizer}{A character string that determines which optimization routine is
to be used. Possible choices are "nlminb" (default), "L-BFGS-B", and "bobyqa".}
}
\value{
(i) intervals: a matrix of dimension length(which.features) x 2 containing the CIs
 (ii) all.vpcs: a matrix of dimension length(which.features) x num.boot containing all
 bootstrapped VPC values.
}
\description{
LONG DESCRIPTION OF GETBOOTCI
}
\examples{
## Compute CI based on 100 bootstrap samples for the first feature 
##  under NBMM. It takes a few minutes.
NBboot <- GetBootCI(simData, strains, 1, 100)
## Extract CI
NBboot.ci <- NBboot[[1]]
## Extract vpcs
NBboot.vpc <- NBboot[[2]]

## Compute CI based on 100 bootstrap samples for the first two features 
##  under vst. 
VSTboot <- GetBootCI(simData, strains, 1:2, 100, method = "VST")

}

